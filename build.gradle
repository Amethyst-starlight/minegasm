buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.1'
group = 'com.therainbowville.minegasm'
archivesBaseName = 'minegasm'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20200514-1.16'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                minegasm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                minegasm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'minegasm', '--all', '--output', file('src/generated/resources/')

            mods {
                minegasm {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://packagecloud.io/blackspherefollower/buttplug4j/maven2"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.3-34.1.0'
    compile 'org.metafetish.buttplug:buttplug.core:0.0.14-SNAPSHOT'
    compile 'org.metafetish.buttplug:buttplug.client:0.0.14-SNAPSHOT'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "minegasm",
            "Specification-Vendor": "therainbowville",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"therainbowville",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
  dependencies {
    include(dependency('com.fasterxml.jackson.core:.*:.*'))
    include(dependency('org.springframework:spring-core:.*'))
    include(dependency('com.neovisionaries:nv-websocket-client:.*'))
    include(dependency('org.metafetish.buttplug:.*:.*'))

    relocate 'com.fasterxml', 'com.therainbowville.repack.com.fasterxml'
    relocate 'org.springframework', 'com.therainbowville.repack.org.springframework'
    relocate 'com.neovisionaries', 'com.therainbowville.repack.com.neovisionaries'
    relocate 'org.metafetish', 'com.therainbowville.repack.org.metafetish'

    classifier ''
  } 
}

reobf {
    shadowJar {}
}

build.dependsOn shadowJar
